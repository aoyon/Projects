;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/12/2013 1:49:18 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2968      	GOTO       360
_Div_16x16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0003	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0004	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0005	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0006	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0007	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0008	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0009	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x000A	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x000B	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x000C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x000D	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x000E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x000F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0010	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0011	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0012	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0013	0x281B      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0014	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0015	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0016	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0017	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0018	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0019	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x001A	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x001B	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x001C	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x001D	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x001E	0x2809      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16x16_U:
0x001F	0x0008      	RETURN
; end of _Div_16x16_U
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x0020	0x1283      	BCF        STATUS, 5
0x0021	0x1303      	BCF        STATUS, 6
0x0022	0x01E7      	CLRF       WordToStr_len_L0
L_WordToStr6:
0x0023	0x3005      	MOVLW      5
0x0024	0x0267      	SUBWF      WordToStr_len_L0, 0
0x0025	0x1803      	BTFSC      STATUS, 0
0x0026	0x282E      	GOTO       L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x0027	0x0867      	MOVF       WordToStr_len_L0, 0
0x0028	0x0766      	ADDWF      FARG_WordToStr_output, 0
0x0029	0x0084      	MOVWF      FSR
0x002A	0x3020      	MOVLW      32
0x002B	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,89 :: 		
0x002C	0x0AE7      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,90 :: 		
0x002D	0x2823      	GOTO       L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x002E	0x0867      	MOVF       WordToStr_len_L0, 0
0x002F	0x0766      	ADDWF      FARG_WordToStr_output, 0
0x0030	0x0084      	MOVWF      FSR
0x0031	0x0180      	CLRF       INDF
0x0032	0x03E7      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x0033	0x0867      	MOVF       WordToStr_len_L0, 0
0x0034	0x0766      	ADDWF      FARG_WordToStr_output, 0
0x0035	0x00E8      	MOVWF      FLOC__WordToStr
0x0036	0x300A      	MOVLW      10
0x0037	0x00F4      	MOVWF      R4
0x0038	0x01F5      	CLRF       R4+1
0x0039	0x0864      	MOVF       FARG_WordToStr_input, 0
0x003A	0x00F0      	MOVWF      R0
0x003B	0x0865      	MOVF       FARG_WordToStr_input+1, 0
0x003C	0x00F1      	MOVWF      R0+1
0x003D	0x2003      	CALL       _Div_16x16_U
0x003E	0x0878      	MOVF       R8, 0
0x003F	0x00F0      	MOVWF      R0
0x0040	0x0879      	MOVF       R8+1, 0
0x0041	0x00F1      	MOVWF      R0+1
0x0042	0x3030      	MOVLW      48
0x0043	0x07F0      	ADDWF      R0, 1
0x0044	0x0868      	MOVF       FLOC__WordToStr, 0
0x0045	0x0084      	MOVWF      FSR
0x0046	0x0870      	MOVF       R0, 0
0x0047	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,95 :: 		
0x0048	0x300A      	MOVLW      10
0x0049	0x00F4      	MOVWF      R4
0x004A	0x01F5      	CLRF       R4+1
0x004B	0x0864      	MOVF       FARG_WordToStr_input, 0
0x004C	0x00F0      	MOVWF      R0
0x004D	0x0865      	MOVF       FARG_WordToStr_input+1, 0
0x004E	0x00F1      	MOVWF      R0+1
0x004F	0x2003      	CALL       _Div_16x16_U
0x0050	0x0870      	MOVF       R0, 0
0x0051	0x00E4      	MOVWF      FARG_WordToStr_input
0x0052	0x0871      	MOVF       R0+1, 0
0x0053	0x00E5      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x0054	0x3000      	MOVLW      0
0x0055	0x0671      	XORWF      R0+1, 0
0x0056	0x1D03      	BTFSS      STATUS, 2
0x0057	0x285A      	GOTO       L__WordToStr109
0x0058	0x3000      	MOVLW      0
0x0059	0x0670      	XORWF      R0, 0
L__WordToStr109:
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x285D      	GOTO       L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x005C	0x285F      	GOTO       L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x005D	0x03E7      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,99 :: 		
0x005E	0x2833      	GOTO       L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x005F	0x0008      	RETURN
; end of _WordToStr
_SPI1_Read:
;__Lib_SPI_c345.c,56 :: 		
;__Lib_SPI_c345.c,57 :: 		
0x0060	0x1283      	BCF        STATUS, 5
0x0061	0x1303      	BCF        STATUS, 6
0x0062	0x0864      	MOVF       FARG_SPI1_Read_buffer, 0
0x0063	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,58 :: 		
L_SPI1_Read6:
0x0064	0x1683      	BSF        STATUS, 5
0x0065	0x1814      	BTFSC      SSPSTAT, 0
0x0066	0x2869      	GOTO       L_SPI1_Read7
;__Lib_SPI_c345.c,59 :: 		
0x0067	0x0000      	NOP
0x0068	0x2864      	GOTO       L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,60 :: 		
0x0069	0x1283      	BCF        STATUS, 5
0x006A	0x0813      	MOVF       SSPBUF, 0
0x006B	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,63 :: 		
L_end_SPI1_Read:
0x006C	0x0008      	RETURN
; end of _SPI1_Read
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x084A      	MOVF       ___DoICPAddr+1, 0
0x0070	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0071	0x0849      	MOVF       ___DoICPAddr, 0
0x0072	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0073	0x0008      	RETURN
; end of _____DoICP
_SPI1_Write:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x0074	0x1283      	BCF        STATUS, 5
0x0075	0x1303      	BCF        STATUS, 6
0x0076	0x0864      	MOVF       FARG_SPI1_Write_data_, 0
0x0077	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Write8:
0x0078	0x1683      	BSF        STATUS, 5
0x0079	0x1814      	BTFSC      SSPSTAT, 0
0x007A	0x287D      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,72 :: 		
0x007B	0x0000      	NOP
0x007C	0x2878      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,73 :: 		
0x007D	0x1283      	BCF        STATUS, 5
0x007E	0x0813      	MOVF       SSPBUF, 0
0x007F	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,75 :: 		
L_end_SPI1_Write:
0x0080	0x0008      	RETURN
; end of _SPI1_Write
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0081	0x1683      	BSF        STATUS, 5
0x0082	0x1303      	BCF        STATUS, 6
0x0083	0x1898      	BTFSC      TXSTA, 1
0x0084	0x2887      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0085	0x0000      	NOP
0x0086	0x2881      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0087	0x1283      	BCF        STATUS, 5
0x0088	0x0864      	MOVF       FARG_UART1_Write_data_, 0
0x0089	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x008A	0x0008      	RETURN
; end of _UART1_Write
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x008B	0x1283      	BCF        STATUS, 5
0x008C	0x1303      	BCF        STATUS, 6
0x008D	0x01DD      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x008E	0x085B      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x008F	0x0084      	MOVWF      FSR
0x0090	0x0800      	MOVF       INDF, 0
0x0091	0x00DC      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x0092	0x085C      	MOVF       UART1_Write_Text_data__L0, 0
0x0093	0x3A00      	XORLW      0
0x0094	0x1903      	BTFSC      STATUS, 2
0x0095	0x28A0      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x0096	0x085C      	MOVF       UART1_Write_Text_data__L0, 0
0x0097	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x0098	0x2081      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x0099	0x0ADD      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x009A	0x085D      	MOVF       UART1_Write_Text_counter_L0, 0
0x009B	0x075B      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x009C	0x0084      	MOVWF      FSR
0x009D	0x0800      	MOVF       INDF, 0
0x009E	0x00DC      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x009F	0x2892      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x00A0	0x0008      	RETURN
; end of _UART1_Write_Text
_IntToStr:
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x00A1	0x1283      	BCF        STATUS, 5
0x00A2	0x1303      	BCF        STATUS, 6
0x00A3	0x01E0      	CLRF       IntToStr_negative_L0
0x00A4	0x01E1      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,153 :: 		
0x00A5	0x085B      	MOVF       FARG_IntToStr_input, 0
0x00A6	0x00E2      	MOVWF      IntToStr_inword_L0
0x00A7	0x085C      	MOVF       FARG_IntToStr_input+1, 0
0x00A8	0x00E3      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,154 :: 		
0x00A9	0x3080      	MOVLW      128
0x00AA	0x065C      	XORWF      FARG_IntToStr_input+1, 0
0x00AB	0x00F0      	MOVWF      R0
0x00AC	0x3080      	MOVLW      128
0x00AD	0x0270      	SUBWF      R0, 0
0x00AE	0x1D03      	BTFSS      STATUS, 2
0x00AF	0x28B2      	GOTO       L__IntToStr115
0x00B0	0x3000      	MOVLW      0
0x00B1	0x025B      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr115:
0x00B2	0x1803      	BTFSC      STATUS, 0
0x00B3	0x28C0      	GOTO       L_IntToStr23
;__Lib_Conversions.c,155 :: 		
0x00B4	0x3001      	MOVLW      1
0x00B5	0x00E0      	MOVWF      IntToStr_negative_L0
0x00B6	0x3000      	MOVLW      0
0x00B7	0x00E1      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,156 :: 		
0x00B8	0x085B      	MOVF       FARG_IntToStr_input, 0
0x00B9	0x3C00      	SUBLW      0
0x00BA	0x00E2      	MOVWF      IntToStr_inword_L0
0x00BB	0x085C      	MOVF       FARG_IntToStr_input+1, 0
0x00BC	0x1C03      	BTFSS      STATUS, 0
0x00BD	0x3E01      	ADDLW      1
0x00BE	0x01E3      	CLRF       IntToStr_inword_L0+1
0x00BF	0x02E3      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
0x00C0	0x0862      	MOVF       IntToStr_inword_L0, 0
0x00C1	0x00E4      	MOVWF      FARG_WordToStr_input
0x00C2	0x0863      	MOVF       IntToStr_inword_L0+1, 0
0x00C3	0x00E5      	MOVWF      FARG_WordToStr_input+1
0x00C4	0x085D      	MOVF       FARG_IntToStr_output, 0
0x00C5	0x00E6      	MOVWF      FARG_WordToStr_output
0x00C6	0x2020      	CALL       _WordToStr
;__Lib_Conversions.c,160 :: 		
0x00C7	0x3006      	MOVLW      6
0x00C8	0x00DE      	MOVWF      IntToStr_i_L0
0x00C9	0x3000      	MOVLW      0
0x00CA	0x00DF      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
0x00CB	0x085F      	MOVF       IntToStr_i_L0+1, 0
0x00CC	0x3C00      	SUBLW      0
0x00CD	0x1D03      	BTFSS      STATUS, 2
0x00CE	0x28D1      	GOTO       L__IntToStr116
0x00CF	0x085E      	MOVF       IntToStr_i_L0, 0
0x00D0	0x3C00      	SUBLW      0
L__IntToStr116:
0x00D1	0x1803      	BTFSC      STATUS, 0
0x00D2	0x28EC      	GOTO       L_IntToStr25
;__Lib_Conversions.c,162 :: 		
0x00D3	0x085E      	MOVF       IntToStr_i_L0, 0
0x00D4	0x075D      	ADDWF      FARG_IntToStr_output, 0
0x00D5	0x00F2      	MOVWF      R2
0x00D6	0x3001      	MOVLW      1
0x00D7	0x025E      	SUBWF      IntToStr_i_L0, 0
0x00D8	0x00F0      	MOVWF      R0
0x00D9	0x3000      	MOVLW      0
0x00DA	0x1C03      	BTFSS      STATUS, 0
0x00DB	0x3E01      	ADDLW      1
0x00DC	0x025F      	SUBWF      IntToStr_i_L0+1, 0
0x00DD	0x00F1      	MOVWF      R0+1
0x00DE	0x0870      	MOVF       R0, 0
0x00DF	0x075D      	ADDWF      FARG_IntToStr_output, 0
0x00E0	0x0084      	MOVWF      FSR
0x00E1	0x0800      	MOVF       INDF, 0
0x00E2	0x00F0      	MOVWF      R0
0x00E3	0x0872      	MOVF       R2, 0
0x00E4	0x0084      	MOVWF      FSR
0x00E5	0x0870      	MOVF       R0, 0
0x00E6	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,163 :: 		
0x00E7	0x3001      	MOVLW      1
0x00E8	0x02DE      	SUBWF      IntToStr_i_L0, 1
0x00E9	0x1C03      	BTFSS      STATUS, 0
0x00EA	0x03DF      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,164 :: 		
0x00EB	0x28CB      	GOTO       L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x00EC	0x085D      	MOVF       FARG_IntToStr_output, 0
0x00ED	0x0084      	MOVWF      FSR
0x00EE	0x3020      	MOVLW      32
0x00EF	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,166 :: 		
0x00F0	0x0860      	MOVF       IntToStr_negative_L0, 0
0x00F1	0x0461      	IORWF      IntToStr_negative_L0+1, 0
0x00F2	0x1903      	BTFSC      STATUS, 2
0x00F3	0x290A      	GOTO       L_IntToStr26
;__Lib_Conversions.c,167 :: 		
0x00F4	0x01DE      	CLRF       IntToStr_i_L0
0x00F5	0x01DF      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
0x00F6	0x085E      	MOVF       IntToStr_i_L0, 0
0x00F7	0x075D      	ADDWF      FARG_IntToStr_output, 0
0x00F8	0x0084      	MOVWF      FSR
0x00F9	0x0800      	MOVF       INDF, 0
0x00FA	0x3A20      	XORLW      32
0x00FB	0x1D03      	BTFSS      STATUS, 2
0x00FC	0x2901      	GOTO       L_IntToStr28
0x00FD	0x0ADE      	INCF       IntToStr_i_L0, 1
0x00FE	0x1903      	BTFSC      STATUS, 2
0x00FF	0x0ADF      	INCF       IntToStr_i_L0+1, 1
0x0100	0x28F6      	GOTO       L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x0101	0x3001      	MOVLW      1
0x0102	0x02DE      	SUBWF      IntToStr_i_L0, 1
0x0103	0x1C03      	BTFSS      STATUS, 0
0x0104	0x03DF      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,170 :: 		
0x0105	0x085E      	MOVF       IntToStr_i_L0, 0
0x0106	0x075D      	ADDWF      FARG_IntToStr_output, 0
0x0107	0x0084      	MOVWF      FSR
0x0108	0x302D      	MOVLW      45
0x0109	0x0080      	MOVWF      INDF
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x010A	0x0008      	RETURN
; end of _IntToStr
_ADXL345_Write:
;AccelSPI_Test.c,26 :: 		void ADXL345_Write(unsigned short address, unsigned short data1) {
;AccelSPI_Test.c,27 :: 		unsigned short internal = 0;
;AccelSPI_Test.c,30 :: 		CS_bit = 0;
0x010B	0x1283      	BCF        STATUS, 5
0x010C	0x1303      	BCF        STATUS, 6
0x010D	0x1007      	BCF        RC0_bit, 0
;AccelSPI_Test.c,31 :: 		SPI1_Write(internal);
0x010E	0x085B      	MOVF       FARG_ADXL345_Write_address, 0
0x010F	0x00E4      	MOVWF      FARG_SPI1_Write_data_
0x0110	0x2074      	CALL       _SPI1_Write
;AccelSPI_Test.c,32 :: 		SPI1_Write(data1);
0x0111	0x085C      	MOVF       FARG_ADXL345_Write_data1, 0
0x0112	0x00E4      	MOVWF      FARG_SPI1_Write_data_
0x0113	0x2074      	CALL       _SPI1_Write
;AccelSPI_Test.c,33 :: 		CS_bit = 1;
0x0114	0x1407      	BSF        RC0_bit, 0
;AccelSPI_Test.c,34 :: 		}
L_end_ADXL345_Write:
0x0115	0x0008      	RETURN
; end of _ADXL345_Write
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0116	0x206D      	CALL       _____DoICP
0x0117	0x118A      	BCF        PCLATH, 3
0x0118	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0119	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x011A	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x011B	0x0AC9      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x011C	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x011D	0x0ACA      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x011E	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x011F	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0120	0x2916      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0121	0x0008      	RETURN
; end of ___CC2DW
_ADXL345_Read:
;AccelSPI_Test.c,36 :: 		unsigned short ADXL345_Read(unsigned short address) {
;AccelSPI_Test.c,37 :: 		unsigned short internal = 0;
;AccelSPI_Test.c,38 :: 		internal = address | _SPI_READ;
0x0122	0x3080      	MOVLW      128
0x0123	0x1283      	BCF        STATUS, 5
0x0124	0x1303      	BCF        STATUS, 6
0x0125	0x045B      	IORWF      FARG_ADXL345_Read_address, 0
0x0126	0x00E4      	MOVWF      FARG_SPI1_Write_data_
;AccelSPI_Test.c,40 :: 		CS_bit = 0;
0x0127	0x1007      	BCF        RC0_bit, 0
;AccelSPI_Test.c,41 :: 		SPI1_Write(internal);
0x0128	0x2074      	CALL       _SPI1_Write
;AccelSPI_Test.c,42 :: 		internal = SPI1_Read(0);
0x0129	0x01E4      	CLRF       FARG_SPI1_Read_buffer
0x012A	0x2060      	CALL       _SPI1_Read
;AccelSPI_Test.c,43 :: 		CS_bit = 1;
0x012B	0x1407      	BSF        RC0_bit, 0
;AccelSPI_Test.c,45 :: 		return internal;
;AccelSPI_Test.c,46 :: 		}
L_end_ADXL345_Read:
0x012C	0x0008      	RETURN
; end of _ADXL345_Read
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x012D	0x1683      	BSF        STATUS, 5
0x012E	0x1303      	BCF        STATUS, 6
0x012F	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0130	0x3090      	MOVLW      144
0x0131	0x1283      	BCF        STATUS, 5
0x0132	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0133	0x1683      	BSF        STATUS, 5
0x0134	0x1787      	BSF        TRISC7_bit, 7
;__Lib_UART_c67.c,8 :: 		
0x0135	0x1307      	BCF        TRISC6_bit, 6
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0136	0x1283      	BCF        STATUS, 5
0x0137	0x1E8C      	BTFSS      PIR1, 5
0x0138	0x293C      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0139	0x081A      	MOVF       RCREG, 0
0x013A	0x00F0      	MOVWF      R0
0x013B	0x2936      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x013C	0x0008      	RETURN
; end of _UART1_Init
_SPI1_Init_Advanced:
;__Lib_SPI_c345.c,31 :: 		
;__Lib_SPI_c345.c,33 :: 		
0x013D	0x1683      	BSF        STATUS, 5
0x013E	0x1303      	BCF        STATUS, 6
0x013F	0x1287      	BCF        TRISC5_bit, 5
;__Lib_SPI_c345.c,34 :: 		
0x0140	0x1283      	BCF        STATUS, 5
0x0141	0x085B      	MOVF       FARG_SPI1_Init_Advanced_master, 0
0x0142	0x3A04      	XORLW      4
0x0143	0x1D03      	BTFSS      STATUS, 2
0x0144	0x2948      	GOTO       L_SPI1_Init_Advanced0
0x0145	0x1683      	BSF        STATUS, 5
0x0146	0x1587      	BSF        TRISC3_bit, 3
0x0147	0x294A      	GOTO       L_SPI1_Init_Advanced1
L_SPI1_Init_Advanced0:
0x0148	0x1683      	BSF        STATUS, 5
;__Lib_SPI_c345.c,35 :: 		
0x0149	0x1187      	BCF        TRISC3_bit, 3
L_SPI1_Init_Advanced1:
;__Lib_SPI_c345.c,36 :: 		
0x014A	0x1607      	BSF        TRISC4_bit, 4
;__Lib_SPI_c345.c,38 :: 		
0x014B	0x1283      	BCF        STATUS, 5
0x014C	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,39 :: 		
0x014D	0x085B      	MOVF       FARG_SPI1_Init_Advanced_master, 0
0x014E	0x0494      	IORWF      SSPCON, 1
;__Lib_SPI_c345.c,40 :: 		
0x014F	0x085D      	MOVF       FARG_SPI1_Init_Advanced_clock_idle, 0
0x0150	0x0494      	IORWF      SSPCON, 1
;__Lib_SPI_c345.c,41 :: 		
0x0151	0x085C      	MOVF       FARG_SPI1_Init_Advanced_data_sample, 0
0x0152	0x1683      	BSF        STATUS, 5
0x0153	0x0494      	IORWF      SSPSTAT, 1
;__Lib_SPI_c345.c,43 :: 		
0x0154	0x1283      	BCF        STATUS, 5
0x0155	0x085D      	MOVF       FARG_SPI1_Init_Advanced_clock_idle, 0
0x0156	0x1903      	BTFSC      STATUS, 2
0x0157	0x295F      	GOTO       L_SPI1_Init_Advanced2
;__Lib_SPI_c345.c,44 :: 		
0x0158	0x085E      	MOVF       FARG_SPI1_Init_Advanced_transmit_edge, 0
0x0159	0x3A00      	XORLW      0
0x015A	0x1D03      	BTFSS      STATUS, 2
0x015B	0x295E      	GOTO       L_SPI1_Init_Advanced3
;__Lib_SPI_c345.c,45 :: 		
0x015C	0x1683      	BSF        STATUS, 5
0x015D	0x1714      	BSF        SSPSTAT, 6
L_SPI1_Init_Advanced3:
;__Lib_SPI_c345.c,46 :: 		
0x015E	0x2965      	GOTO       L_SPI1_Init_Advanced4
L_SPI1_Init_Advanced2:
;__Lib_SPI_c345.c,48 :: 		
0x015F	0x1283      	BCF        STATUS, 5
0x0160	0x085E      	MOVF       FARG_SPI1_Init_Advanced_transmit_edge, 0
0x0161	0x1903      	BTFSC      STATUS, 2
0x0162	0x2965      	GOTO       L_SPI1_Init_Advanced5
;__Lib_SPI_c345.c,49 :: 		
0x0163	0x1683      	BSF        STATUS, 5
0x0164	0x1714      	BSF        SSPSTAT, 6
L_SPI1_Init_Advanced5:
;__Lib_SPI_c345.c,50 :: 		
L_SPI1_Init_Advanced4:
;__Lib_SPI_c345.c,51 :: 		
0x0165	0x1283      	BCF        STATUS, 5
0x0166	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,52 :: 		
L_end_SPI1_Init_Advanced:
0x0167	0x0008      	RETURN
; end of _SPI1_Init_Advanced
_main:
0x0168	0x2262      	CALL       610
;AccelSPI_Test.c,48 :: 		void main() {
;AccelSPI_Test.c,50 :: 		CS_bit = 1;
0x0169	0x1283      	BCF        STATUS, 5
0x016A	0x1303      	BCF        STATUS, 6
0x016B	0x1407      	BSF        RC0_bit, 0
;AccelSPI_Test.c,51 :: 		CS_Direction_bit = 0;
0x016C	0x1683      	BSF        STATUS, 5
0x016D	0x1007      	BCF        TRISC0_bit, 0
;AccelSPI_Test.c,54 :: 		SPI1_Init_Advanced(_SPI_MASTER_OSC_DIV4, _SPI_DATA_SAMPLE_MIDDLE, _SPI_CLK_IDLE_HIGH, _SPI_LOW_2_HIGH);
0x016E	0x1283      	BCF        STATUS, 5
0x016F	0x01DB      	CLRF       FARG_SPI1_Init_Advanced_master
0x0170	0x01DC      	CLRF       FARG_SPI1_Init_Advanced_data_sample
0x0171	0x3010      	MOVLW      16
0x0172	0x00DD      	MOVWF      FARG_SPI1_Init_Advanced_clock_idle
0x0173	0x3001      	MOVLW      1
0x0174	0x00DE      	MOVWF      FARG_SPI1_Init_Advanced_transmit_edge
0x0175	0x213D      	CALL       _SPI1_Init_Advanced
;AccelSPI_Test.c,57 :: 		UART1_Init(9600);
0x0176	0x3033      	MOVLW      51
0x0177	0x1683      	BSF        STATUS, 5
0x0178	0x0099      	MOVWF      SPBRG
0x0179	0x1518      	BSF        TXSTA, 2
0x017A	0x212D      	CALL       _UART1_Init
;AccelSPI_Test.c,59 :: 		UART1_Write_Text("Starting ADXL345 test.");
0x017B	0x3028      	MOVLW      ?lstr1_AccelSPI_Test
0x017C	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x017D	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,60 :: 		UART1_Write(13);
0x017E	0x300D      	MOVLW      13
0x017F	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x0180	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,61 :: 		UART1_Write(10);
0x0181	0x300A      	MOVLW      10
0x0182	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x0183	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,63 :: 		Delay_ms(1000);
0x0184	0x300B      	MOVLW      11
0x0185	0x00FB      	MOVWF      R11
0x0186	0x3026      	MOVLW      38
0x0187	0x00FC      	MOVWF      R12
0x0188	0x305D      	MOVLW      93
0x0189	0x00FD      	MOVWF      R13
L_main0:
0x018A	0x0BFD      	DECFSZ     R13, 1
0x018B	0x298A      	GOTO       L_main0
0x018C	0x0BFC      	DECFSZ     R12, 1
0x018D	0x298A      	GOTO       L_main0
0x018E	0x0BFB      	DECFSZ     R11, 1
0x018F	0x298A      	GOTO       L_main0
0x0190	0x0000      	NOP
0x0191	0x0000      	NOP
;AccelSPI_Test.c,66 :: 		ADXL345_Write(_POWER_CTL, 0x00);
0x0192	0x302D      	MOVLW      45
0x0193	0x00DB      	MOVWF      FARG_ADXL345_Write_address
0x0194	0x01DC      	CLRF       FARG_ADXL345_Write_data1
0x0195	0x210B      	CALL       _ADXL345_Write
;AccelSPI_Test.c,69 :: 		ADXL345_Write(_DATA_FORMAT, 0x0B);
0x0196	0x3031      	MOVLW      49
0x0197	0x00DB      	MOVWF      FARG_ADXL345_Write_address
0x0198	0x300B      	MOVLW      11
0x0199	0x00DC      	MOVWF      FARG_ADXL345_Write_data1
0x019A	0x210B      	CALL       _ADXL345_Write
;AccelSPI_Test.c,72 :: 		ADXL345_Write(_BW_RATE, _SPEED);
0x019B	0x302C      	MOVLW      44
0x019C	0x00DB      	MOVWF      FARG_ADXL345_Write_address
0x019D	0x300F      	MOVLW      15
0x019E	0x00DC      	MOVWF      FARG_ADXL345_Write_data1
0x019F	0x210B      	CALL       _ADXL345_Write
;AccelSPI_Test.c,75 :: 		ADXL345_Write(_POWER_CTL, 0x08);
0x01A0	0x302D      	MOVLW      45
0x01A1	0x00DB      	MOVWF      FARG_ADXL345_Write_address
0x01A2	0x3008      	MOVLW      8
0x01A3	0x00DC      	MOVWF      FARG_ADXL345_Write_data1
0x01A4	0x210B      	CALL       _ADXL345_Write
;AccelSPI_Test.c,77 :: 		while (1) {
L_main1:
;AccelSPI_Test.c,79 :: 		Delay_ms(800);
0x01A5	0x3009      	MOVLW      9
0x01A6	0x00FB      	MOVWF      R11
0x01A7	0x301E      	MOVLW      30
0x01A8	0x00FC      	MOVWF      R12
0x01A9	0x30E4      	MOVLW      228
0x01AA	0x00FD      	MOVWF      R13
L_main3:
0x01AB	0x0BFD      	DECFSZ     R13, 1
0x01AC	0x29AB      	GOTO       L_main3
0x01AD	0x0BFC      	DECFSZ     R12, 1
0x01AE	0x29AB      	GOTO       L_main3
0x01AF	0x0BFB      	DECFSZ     R11, 1
0x01B0	0x29AB      	GOTO       L_main3
0x01B1	0x0000      	NOP
;AccelSPI_Test.c,82 :: 		readings[0] = ADXL345_Read(_DATAX0) << 8;
0x01B2	0x3032      	MOVLW      50
0x01B3	0x00DB      	MOVWF      FARG_ADXL345_Read_address
0x01B4	0x2122      	CALL       _ADXL345_Read
0x01B5	0x0870      	MOVF       R0, 0
0x01B6	0x00C4      	MOVWF      _readings+1
0x01B7	0x01C3      	CLRF       _readings
;AccelSPI_Test.c,85 :: 		readings[0] = readings[0] | ADXL345_Read(_DATAX1);
0x01B8	0x3033      	MOVLW      51
0x01B9	0x00DB      	MOVWF      FARG_ADXL345_Read_address
0x01BA	0x2122      	CALL       _ADXL345_Read
0x01BB	0x0870      	MOVF       R0, 0
0x01BC	0x04C3      	IORWF      _readings, 1
0x01BD	0x3000      	MOVLW      0
0x01BE	0x04C4      	IORWF      _readings+1, 1
;AccelSPI_Test.c,88 :: 		readings[1] = ADXL345_Read(_DATAY0) << 8;
0x01BF	0x3034      	MOVLW      52
0x01C0	0x00DB      	MOVWF      FARG_ADXL345_Read_address
0x01C1	0x2122      	CALL       _ADXL345_Read
0x01C2	0x0870      	MOVF       R0, 0
0x01C3	0x00C6      	MOVWF      _readings+3
0x01C4	0x01C5      	CLRF       _readings+2
;AccelSPI_Test.c,91 :: 		readings[1] = readings[1] | ADXL345_Read(_DATAY1);
0x01C5	0x3035      	MOVLW      53
0x01C6	0x00DB      	MOVWF      FARG_ADXL345_Read_address
0x01C7	0x2122      	CALL       _ADXL345_Read
0x01C8	0x0870      	MOVF       R0, 0
0x01C9	0x04C5      	IORWF      _readings+2, 1
0x01CA	0x3000      	MOVLW      0
0x01CB	0x04C6      	IORWF      _readings+3, 1
;AccelSPI_Test.c,94 :: 		readings[2] = ADXL345_Read(_DATAZ0) << 8;
0x01CC	0x3036      	MOVLW      54
0x01CD	0x00DB      	MOVWF      FARG_ADXL345_Read_address
0x01CE	0x2122      	CALL       _ADXL345_Read
0x01CF	0x0870      	MOVF       R0, 0
0x01D0	0x00C8      	MOVWF      _readings+5
0x01D1	0x01C7      	CLRF       _readings+4
;AccelSPI_Test.c,97 :: 		readings[2] = readings[2] | ADXL345_Read(_DATAZ1);
0x01D2	0x3037      	MOVLW      55
0x01D3	0x00DB      	MOVWF      FARG_ADXL345_Read_address
0x01D4	0x2122      	CALL       _ADXL345_Read
0x01D5	0x0870      	MOVF       R0, 0
0x01D6	0x04C7      	IORWF      _readings+4, 1
0x01D7	0x3000      	MOVLW      0
0x01D8	0x04C8      	IORWF      _readings+5, 1
;AccelSPI_Test.c,100 :: 		UART1_Write_Text("X: ");
0x01D9	0x303F      	MOVLW      ?lstr2_AccelSPI_Test
0x01DA	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01DB	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,101 :: 		IntToStr(readings[0], out);
0x01DC	0x0843      	MOVF       _readings, 0
0x01DD	0x00DB      	MOVWF      FARG_IntToStr_input
0x01DE	0x0844      	MOVF       _readings+1, 0
0x01DF	0x00DC      	MOVWF      FARG_IntToStr_input+1
0x01E0	0x304B      	MOVLW      _out
0x01E1	0x00DD      	MOVWF      FARG_IntToStr_output
0x01E2	0x20A1      	CALL       _IntToStr
;AccelSPI_Test.c,102 :: 		UART1_Write_Text(out);
0x01E3	0x304B      	MOVLW      _out
0x01E4	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01E5	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,103 :: 		UART1_Write(13);
0x01E6	0x300D      	MOVLW      13
0x01E7	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x01E8	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,104 :: 		UART1_Write(10);
0x01E9	0x300A      	MOVLW      10
0x01EA	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x01EB	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,106 :: 		Delay_ms(100);
0x01EC	0x3002      	MOVLW      2
0x01ED	0x00FB      	MOVWF      R11
0x01EE	0x3004      	MOVLW      4
0x01EF	0x00FC      	MOVWF      R12
0x01F0	0x30BA      	MOVLW      186
0x01F1	0x00FD      	MOVWF      R13
L_main4:
0x01F2	0x0BFD      	DECFSZ     R13, 1
0x01F3	0x29F2      	GOTO       L_main4
0x01F4	0x0BFC      	DECFSZ     R12, 1
0x01F5	0x29F2      	GOTO       L_main4
0x01F6	0x0BFB      	DECFSZ     R11, 1
0x01F7	0x29F2      	GOTO       L_main4
0x01F8	0x0000      	NOP
;AccelSPI_Test.c,109 :: 		UART1_Write_Text("Y: ");
0x01F9	0x3024      	MOVLW      ?lstr3_AccelSPI_Test
0x01FA	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01FB	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,110 :: 		IntToStr(readings[1], out);
0x01FC	0x0845      	MOVF       _readings+2, 0
0x01FD	0x00DB      	MOVWF      FARG_IntToStr_input
0x01FE	0x0846      	MOVF       _readings+3, 0
0x01FF	0x00DC      	MOVWF      FARG_IntToStr_input+1
0x0200	0x304B      	MOVLW      _out
0x0201	0x00DD      	MOVWF      FARG_IntToStr_output
0x0202	0x20A1      	CALL       _IntToStr
;AccelSPI_Test.c,111 :: 		UART1_Write_Text(out);
0x0203	0x304B      	MOVLW      _out
0x0204	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0205	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,112 :: 		UART1_Write(13);
0x0206	0x300D      	MOVLW      13
0x0207	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x0208	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,113 :: 		UART1_Write(10);
0x0209	0x300A      	MOVLW      10
0x020A	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x020B	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,115 :: 		Delay_ms(100);
0x020C	0x3002      	MOVLW      2
0x020D	0x00FB      	MOVWF      R11
0x020E	0x3004      	MOVLW      4
0x020F	0x00FC      	MOVWF      R12
0x0210	0x30BA      	MOVLW      186
0x0211	0x00FD      	MOVWF      R13
L_main5:
0x0212	0x0BFD      	DECFSZ     R13, 1
0x0213	0x2A12      	GOTO       L_main5
0x0214	0x0BFC      	DECFSZ     R12, 1
0x0215	0x2A12      	GOTO       L_main5
0x0216	0x0BFB      	DECFSZ     R11, 1
0x0217	0x2A12      	GOTO       L_main5
0x0218	0x0000      	NOP
;AccelSPI_Test.c,118 :: 		UART1_Write_Text("Z: ");
0x0219	0x3020      	MOVLW      ?lstr4_AccelSPI_Test
0x021A	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x021B	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,119 :: 		IntToStr(readings[2], out);
0x021C	0x0847      	MOVF       _readings+4, 0
0x021D	0x00DB      	MOVWF      FARG_IntToStr_input
0x021E	0x0848      	MOVF       _readings+5, 0
0x021F	0x00DC      	MOVWF      FARG_IntToStr_input+1
0x0220	0x304B      	MOVLW      _out
0x0221	0x00DD      	MOVWF      FARG_IntToStr_output
0x0222	0x20A1      	CALL       _IntToStr
;AccelSPI_Test.c,120 :: 		UART1_Write_Text(out);
0x0223	0x304B      	MOVLW      _out
0x0224	0x00DB      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0225	0x208B      	CALL       _UART1_Write_Text
;AccelSPI_Test.c,121 :: 		UART1_Write(13);
0x0226	0x300D      	MOVLW      13
0x0227	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x0228	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,122 :: 		UART1_Write(10);
0x0229	0x300A      	MOVLW      10
0x022A	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x022B	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,124 :: 		UART1_Write(13);
0x022C	0x300D      	MOVLW      13
0x022D	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x022E	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,125 :: 		UART1_Write(10);
0x022F	0x300A      	MOVLW      10
0x0230	0x00E4      	MOVWF      FARG_UART1_Write_data_
0x0231	0x2081      	CALL       _UART1_Write
;AccelSPI_Test.c,128 :: 		}
0x0232	0x29A5      	GOTO       L_main1
;AccelSPI_Test.c,129 :: 		}
L_end_main:
0x0233	0x2A33      	GOTO       $+0
; end of _main
0x0262	0x3020      	MOVLW      32
0x0263	0x0084      	MOVWF      FSR
0x0264	0x3029      	MOVLW      41
0x0265	0x1283      	BCF        STATUS, 5
0x0266	0x1303      	BCF        STATUS, 6
0x0267	0x00F0      	MOVWF      R0
0x0268	0x3039      	MOVLW      57
0x0269	0x00C9      	MOVWF      ___DoICPAddr
0x026A	0x3002      	MOVLW      2
0x026B	0x00CA      	MOVWF      74
0x026C	0x2116      	CALL       278
0x026D	0x0008      	RETURN
;AccelSPI_Test.c,0 :: ?ICS?lstr4_AccelSPI_Test
0x0239	0x345A ;?ICS?lstr4_AccelSPI_Test+0
0x023A	0x343A ;?ICS?lstr4_AccelSPI_Test+1
0x023B	0x3420 ;?ICS?lstr4_AccelSPI_Test+2
0x023C	0x3400 ;?ICS?lstr4_AccelSPI_Test+3
; end of ?ICS?lstr4_AccelSPI_Test
;AccelSPI_Test.c,0 :: ?ICS?lstr3_AccelSPI_Test
0x023D	0x3459 ;?ICS?lstr3_AccelSPI_Test+0
0x023E	0x343A ;?ICS?lstr3_AccelSPI_Test+1
0x023F	0x3420 ;?ICS?lstr3_AccelSPI_Test+2
0x0240	0x3400 ;?ICS?lstr3_AccelSPI_Test+3
; end of ?ICS?lstr3_AccelSPI_Test
;AccelSPI_Test.c,0 :: ?ICS?lstr1_AccelSPI_Test
0x0241	0x3453 ;?ICS?lstr1_AccelSPI_Test+0
0x0242	0x3474 ;?ICS?lstr1_AccelSPI_Test+1
0x0243	0x3461 ;?ICS?lstr1_AccelSPI_Test+2
0x0244	0x3472 ;?ICS?lstr1_AccelSPI_Test+3
0x0245	0x3474 ;?ICS?lstr1_AccelSPI_Test+4
0x0246	0x3469 ;?ICS?lstr1_AccelSPI_Test+5
0x0247	0x346E ;?ICS?lstr1_AccelSPI_Test+6
0x0248	0x3467 ;?ICS?lstr1_AccelSPI_Test+7
0x0249	0x3420 ;?ICS?lstr1_AccelSPI_Test+8
0x024A	0x3441 ;?ICS?lstr1_AccelSPI_Test+9
0x024B	0x3444 ;?ICS?lstr1_AccelSPI_Test+10
0x024C	0x3458 ;?ICS?lstr1_AccelSPI_Test+11
0x024D	0x344C ;?ICS?lstr1_AccelSPI_Test+12
0x024E	0x3433 ;?ICS?lstr1_AccelSPI_Test+13
0x024F	0x3434 ;?ICS?lstr1_AccelSPI_Test+14
0x0250	0x3435 ;?ICS?lstr1_AccelSPI_Test+15
0x0251	0x3420 ;?ICS?lstr1_AccelSPI_Test+16
0x0252	0x3474 ;?ICS?lstr1_AccelSPI_Test+17
0x0253	0x3465 ;?ICS?lstr1_AccelSPI_Test+18
0x0254	0x3473 ;?ICS?lstr1_AccelSPI_Test+19
0x0255	0x3474 ;?ICS?lstr1_AccelSPI_Test+20
0x0256	0x342E ;?ICS?lstr1_AccelSPI_Test+21
0x0257	0x3400 ;?ICS?lstr1_AccelSPI_Test+22
; end of ?ICS?lstr1_AccelSPI_Test
;AccelSPI_Test.c,0 :: ?ICS?lstr2_AccelSPI_Test
0x0258	0x3458 ;?ICS?lstr2_AccelSPI_Test+0
0x0259	0x343A ;?ICS?lstr2_AccelSPI_Test+1
0x025A	0x3420 ;?ICS?lstr2_AccelSPI_Test+2
0x025B	0x3400 ;?ICS?lstr2_AccelSPI_Test+3
; end of ?ICS?lstr2_AccelSPI_Test
;AccelSPI_Test.c,0 :: ?ICS_readings
0x025C	0x3400 ;?ICS_readings+0
0x025D	0x3400 ;?ICS_readings+1
0x025E	0x3400 ;?ICS_readings+2
0x025F	0x3400 ;?ICS_readings+3
0x0260	0x3400 ;?ICS_readings+4
0x0261	0x3400 ;?ICS_readings+5
; end of ?ICS_readings
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [29]    _Div_16x16_U
0x0020      [64]    _WordToStr
0x0060      [13]    _SPI1_Read
0x006D       [7]    _____DoICP
0x0074      [13]    _SPI1_Write
0x0081      [10]    _UART1_Write
0x008B      [22]    _UART1_Write_Text
0x00A1     [106]    _IntToStr
0x010B      [11]    _ADXL345_Write
0x0116      [12]    ___CC2DW
0x0122      [11]    _ADXL345_Read
0x012D      [16]    _UART1_Init
0x013D      [43]    _SPI1_Init_Advanced
0x0168     [203]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [0]    RC0_bit
0x0007       [0]    CS_bit
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [4]    ?lstr4_AccelSPI_Test
0x0024       [4]    ?lstr3_AccelSPI_Test
0x0028      [23]    ?lstr1_AccelSPI_Test
0x003F       [4]    ?lstr2_AccelSPI_Test
0x0043       [6]    _readings
0x0049       [2]    ___DoICPAddr
0x004B      [16]    _out
0x005B       [1]    FARG_SPI1_Init_Advanced_master
0x005B       [1]    FARG_ADXL345_Read_address
0x005B       [1]    FARG_ADXL345_Write_address
0x005B       [2]    FARG_IntToStr_input
0x005B       [1]    FARG_UART1_Write_Text_uart_text
0x005C       [1]    FARG_ADXL345_Write_data1
0x005C       [1]    FARG_SPI1_Init_Advanced_data_sample
0x005C       [1]    UART1_Write_Text_data__L0
0x005D       [1]    FARG_IntToStr_output
0x005D       [1]    UART1_Write_Text_counter_L0
0x005D       [1]    FARG_SPI1_Init_Advanced_clock_idle
0x005E       [2]    IntToStr_i_L0
0x005E       [1]    FARG_SPI1_Init_Advanced_transmit_edge
0x0060       [2]    IntToStr_negative_L0
0x0062       [2]    IntToStr_inword_L0
0x0064       [1]    FARG_SPI1_Write_data_
0x0064       [2]    FARG_WordToStr_input
0x0064       [1]    FARG_UART1_Write_data_
0x0064       [1]    FARG_SPI1_Read_buffer
0x0066       [1]    FARG_WordToStr_output
0x0067       [1]    WordToStr_len_L0
0x0068       [1]    FLOC__WordToStr
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    CS_Direction_bit
0x0087       [0]    TRISC0_bit
0x0094       [1]    SSPSTAT
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0239       [4]    ?ICS?lstr4_AccelSPI_Test
0x023D       [4]    ?ICS?lstr3_AccelSPI_Test
0x0241      [23]    ?ICS?lstr1_AccelSPI_Test
0x0258       [4]    ?ICS?lstr2_AccelSPI_Test
0x025C       [6]    ?ICS_readings
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_end_ADXL345_Write
  _ADXL345_Write
  L_end_ADXL345_Read
  _ADXL345_Read
  L_end_main
  _main
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr144
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
